Terminals unused in grammar

    XOR
    GOTO
    SWITCH
    CASE
    DEFAULT


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: external_declaration
    2                 | translation_unit external_declaration

    3 external_declaration: function_definition
    4                     | declaration
    5                     | PREPROCESSOR

    6 declaration_list: declaration
    7                 | declaration_list declaration

    8 block_item: declaration
    9           | statement

   10 type_qualifier_list: type_qualifier
   11                    | type_qualifier_list type_qualifier

   12 compound_statement: LBRACE RBRACE
   13                   | LBRACE non_empty_block_item_list RBRACE

   14 non_empty_block_item_list: block_item
   15                          | non_empty_block_item_list block_item

   16 function_definition: declaration_specifiers declarator declaration_list compound_statement
   17                    | declaration_specifiers declarator compound_statement

   18 declaration: declaration_specifiers SEMICOLON
   19            | declaration_specifiers init_declarator_list SEMICOLON

   20 init_declarator_list: init_declarator
   21                     | init_declarator_list COMMA init_declarator

   22 init_declarator: declarator ASSIGN initializer
   23                | declarator

   24 declaration_specifiers: storage_class_specifier declaration_specifiers
   25                       | storage_class_specifier
   26                       | type_specifier declaration_specifiers
   27                       | type_specifier
   28                       | type_qualifier declaration_specifiers
   29                       | type_qualifier
   30                       | function_specifier declaration_specifiers
   31                       | function_specifier
   32                       | alignment_specifier declaration_specifiers
   33                       | alignment_specifier

   34 storage_class_specifier: TYPEDEF
   35                        | EXTERN
   36                        | STATIC
   37                        | AUTO
   38                        | REGISTER

   39 type_specifier: VOID
   40               | CHAR
   41               | SHORT
   42               | INT
   43               | LONG
   44               | FLOAT
   45               | DOUBLE
   46               | SIGNED
   47               | UNSIGNED
   48               | BOOL
   49               | struct_or_union_specifier
   50               | enum_specifier
   51               | TYPEDEF_NAME

   52 type_qualifier: CONST
   53               | RESTRICT
   54               | VOLATILE

   55 function_specifier: INLINE
   56                   | NORETURN

   57 alignment_specifier: ALIGNAS LPAREN type_name RPAREN

   58 declarator: pointer direct_declarator
   59           | direct_declarator

   60 pointer: MULTIPLY
   61        | MULTIPLY type_qualifier_list
   62        | MULTIPLY pointer
   63        | MULTIPLY type_qualifier_list pointer

   64 direct_declarator: IDENTIFIER
   65                  | LPAREN declarator RPAREN
   66                  | direct_declarator LSQBRACKET assignment_expression RSQBRACKET
   67                  | direct_declarator LPAREN RPAREN
   68                  | direct_declarator LPAREN argument_expression_list RPAREN
   69                  | direct_declarator LPAREN parameter_type_list RPAREN

   70 struct_or_union_specifier: STRUCT LBRACE struct_declaration_list RBRACE
   71                          | STRUCT IDENTIFIER LBRACE struct_declaration_list RBRACE
   72                          | STRUCT IDENTIFIER
   73                          | UNION LBRACE struct_declaration_list RBRACE
   74                          | UNION IDENTIFIER LBRACE struct_declaration_list RBRACE
   75                          | UNION IDENTIFIER

   76 struct_declaration_list: struct_declaration
   77                        | struct_declaration_list struct_declaration

   78 struct_declaration: specifier_qualifier_list SEMICOLON
   79                   | specifier_qualifier_list struct_declarator_list SEMICOLON

   80 specifier_qualifier_list: type_specifier
   81                         | type_specifier specifier_qualifier_list
   82                         | type_qualifier
   83                         | type_qualifier specifier_qualifier_list

   84 struct_declarator_list: struct_declarator
   85                       | struct_declarator_list COMMA struct_declarator

   86 struct_declarator: declarator
   87                  | declarator COLON constant_expression
   88                  | COLON constant_expression

   89 enum_specifier: ENUM LBRACE enumerator_list RBRACE
   90               | ENUM IDENTIFIER LBRACE enumerator_list RBRACE
   91               | ENUM IDENTIFIER

   92 enumerator_list: enumeration_constant
   93                | enumerator_list COMMA enumeration_constant

   94 enumeration_constant: IDENTIFIER

   95 type_name: specifier_qualifier_list
   96          | specifier_qualifier_list abstract_declarator

   97 abstract_declarator: pointer
   98                    | pointer direct_abstract_declarator
   99                    | direct_abstract_declarator

  100 direct_abstract_declarator: LPAREN abstract_declarator RPAREN
  101                           | LSQBRACKET RSQBRACKET
  102                           | LSQBRACKET type_qualifier_list assignment_expression RSQBRACKET
  103                           | direct_abstract_declarator LSQBRACKET assignment_expression RSQBRACKET
  104                           | LPAREN parameter_type_list RPAREN
  105                           | direct_abstract_declarator LPAREN parameter_type_list RPAREN

  106 parameter_type_list: parameter_list
  107                    | parameter_list COMMA ELLIPSIS

  108 parameter_list: parameter_declaration
  109               | parameter_list COMMA parameter_declaration

  110 parameter_declaration: declaration_specifiers declarator
  111                      | declaration_specifiers abstract_declarator
  112                      | declaration_specifiers

  113 initializer: assignment_expression
  114            | LBRACE initializer_list RBRACE
  115            | LBRACE initializer_list COMMA RBRACE

  116 initializer_list: initializer
  117                 | initializer_list COMMA initializer

  118 statement: expression_statement
  119          | RETURN expression SEMICOLON
  120          | iteration_statement
  121          | conditional_statement
  122          | compound_statement
  123          | BREAK SEMICOLON
  124          | CONTINUE SEMICOLON

  125 iteration_statement: DO statement WHILE LPAREN expression RPAREN SEMICOLON
  126                    | WHILE LPAREN expression RPAREN statement
  127                    | FOR LPAREN expression_statement expression_statement expression_statement RPAREN statement

  128 conditional_statement: IF LPAREN expression RPAREN statement
  129                      | IF LPAREN expression RPAREN statement ELSE statement

  130 expression_statement: SEMICOLON
  131                     | expression SEMICOLON

  132 primary_expression: IDENTIFIER
  133                   | NUMBER
  134                   | CHAR_LITERAL
  135                   | STRING_LITERAL
  136                   | LPAREN expression RPAREN

  137 postfix_expression: primary_expression
  138                   | postfix_expression LSQBRACKET expression RSQBRACKET
  139                   | postfix_expression LPAREN RPAREN
  140                   | postfix_expression LPAREN argument_expression_list RPAREN
  141                   | postfix_expression DOT IDENTIFIER
  142                   | postfix_expression ARROW IDENTIFIER
  143                   | postfix_expression INCREMENT
  144                   | postfix_expression DECREMENT

  145 argument_expression_list: assignment_expression
  146                         | argument_expression_list COMMA assignment_expression

  147 unary_expression: postfix_expression
  148                 | INCREMENT unary_expression
  149                 | DECREMENT unary_expression
  150                 | unary_operator cast_expression
  151                 | SIZEOF unary_expression
  152                 | SIZEOF LPAREN type_name RPAREN

  153 unary_operator: BIT_AND
  154               | MULTIPLY
  155               | PLUS
  156               | MINUS
  157               | BIT_NOT
  158               | NOT

  159 cast_expression: unary_expression
  160                | LPAREN type_name RPAREN cast_expression

  161 multiplicative_expression: cast_expression
  162                          | multiplicative_expression MULTIPLY cast_expression
  163                          | multiplicative_expression DIVIDE cast_expression
  164                          | multiplicative_expression MODULO cast_expression

  165 additive_expression: multiplicative_expression
  166                    | additive_expression PLUS multiplicative_expression
  167                    | additive_expression MINUS multiplicative_expression

  168 shift_expression: additive_expression
  169                 | shift_expression SHIFT_LEFT additive_expression
  170                 | shift_expression SHIFT_RIGHT additive_expression

  171 relational_expression: shift_expression
  172                      | relational_expression LESS shift_expression
  173                      | relational_expression GREATER shift_expression
  174                      | relational_expression LESS_EQUAL shift_expression
  175                      | relational_expression GREATER_EQUAL shift_expression

  176 equality_expression: relational_expression
  177                    | equality_expression EQUAL relational_expression
  178                    | equality_expression NOT_EQUAL relational_expression

  179 and_expression: equality_expression
  180               | and_expression BIT_AND equality_expression

  181 exclusive_or_expression: and_expression
  182                        | exclusive_or_expression BIT_XOR and_expression

  183 inclusive_or_expression: exclusive_or_expression
  184                        | inclusive_or_expression BIT_OR exclusive_or_expression

  185 logical_and_expression: inclusive_or_expression
  186                       | logical_and_expression AND inclusive_or_expression

  187 logical_or_expression: logical_and_expression
  188                      | logical_or_expression OR logical_and_expression

  189 conditional_expression: logical_or_expression
  190                       | logical_or_expression QUESTION expression COLON conditional_expression

  191 assignment_expression: conditional_expression
  192                      | unary_expression assignment_operator assignment_expression

  193 assignment_operator: ASSIGN
  194                    | PLUS_ASSIGN
  195                    | MINUS_ASSIGN
  196                    | MUL_ASSIGN
  197                    | DIV_ASSIGN
  198                    | MOD_ASSIGN
  199                    | SHIFT_LEFT_ASSIGN
  200                    | SHIFT_RIGHT_ASSIGN
  201                    | BIT_AND_ASSIGN
  202                    | BIT_XOR_ASSIGN
  203                    | BIT_OR_ASSIGN

  204 expression: assignment_expression
  205           | expression COMMA assignment_expression

  206 constant_expression: conditional_expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PREPROCESSOR (258) 5
    IDENTIFIER (259) 64 71 72 74 75 90 91 94 132 141 142
    NUMBER (260) 133
    CHAR_LITERAL (261) 134
    STRING_LITERAL (262) 135
    TYPEDEF_NAME (263) 51
    TYPEDEF (264) 34
    EXTERN (265) 35
    STATIC (266) 36
    AUTO (267) 37
    REGISTER (268) 38
    VOID (269) 39
    CHAR (270) 40
    SHORT (271) 41
    INT (272) 42
    LONG (273) 43
    FLOAT (274) 44
    DOUBLE (275) 45
    SIGNED (276) 46
    UNSIGNED (277) 47
    BOOL (278) 48
    STRUCT (279) 70 71 72
    UNION (280) 73 74 75
    ENUM (281) 89 90 91
    CONST (282) 52
    RESTRICT (283) 53
    VOLATILE (284) 54
    INLINE (285) 55
    NORETURN (286) 56
    ALIGNAS (287) 57
    SIZEOF (288) 151 152
    ELLIPSIS (289) 107
    LPAREN (290) 57 65 67 68 69 100 104 105 125 126 127 128 129 136 139 140 152 160
    RPAREN (291) 57 65 67 68 69 100 104 105 125 126 127 128 129 136 139 140 152 160
    LSQBRACKET (292) 66 101 102 103 138
    RSQBRACKET (293) 66 101 102 103 138
    LBRACE (294) 12 13 70 71 73 74 89 90 114 115
    RBRACE (295) 12 13 70 71 73 74 89 90 114 115
    SEMICOLON (296) 18 19 78 79 119 123 124 125 130 131
    COMMA (297) 21 85 93 107 109 115 117 146 205
    COLON (298) 87 88 190
    DOT (299) 141
    ARROW (300) 142
    QUESTION (301) 190
    ASSIGN (302) 22 193
    PLUS_ASSIGN (303) 194
    MINUS_ASSIGN (304) 195
    MUL_ASSIGN (305) 196
    DIV_ASSIGN (306) 197
    MOD_ASSIGN (307) 198
    SHIFT_LEFT_ASSIGN (308) 199
    SHIFT_RIGHT_ASSIGN (309) 200
    BIT_AND_ASSIGN (310) 201
    BIT_XOR_ASSIGN (311) 202
    BIT_OR_ASSIGN (312) 203
    OR (313) 188
    AND (314) 186
    BIT_OR (315) 184
    BIT_AND (316) 153 180
    BIT_XOR (317) 182
    XOR (318)
    NOT (319) 158
    BIT_NOT (320) 157
    EQUAL (321) 177
    NOT_EQUAL (322) 178
    LESS (323) 172
    GREATER (324) 173
    LESS_EQUAL (325) 174
    GREATER_EQUAL (326) 175
    SHIFT_LEFT (327) 169
    SHIFT_RIGHT (328) 170
    PLUS (329) 155 166
    MINUS (330) 156 167
    MULTIPLY (331) 60 61 62 63 154 162
    DIVIDE (332) 163
    MODULO (333) 164
    IF (334) 128 129
    ELSE (335) 129
    WHILE (336) 125 126
    GOTO (337)
    BREAK (338) 123
    CONTINUE (339) 124
    FOR (340) 127
    SWITCH (341)
    CASE (342)
    DEFAULT (343)
    DO (344) 125
    INCREMENT (345) 143 148
    DECREMENT (346) 144 149
    RETURN (347) 119
    LOWER_THAN_ELSE (348)


Nonterminals, with rules where they appear

    $accept (94)
        on left: 0
    translation_unit (95)
        on left: 1 2
        on right: 0 2
    external_declaration (96)
        on left: 3 4 5
        on right: 1 2
    declaration_list (97)
        on left: 6 7
        on right: 7 16
    block_item (98)
        on left: 8 9
        on right: 14 15
    type_qualifier_list (99)
        on left: 10 11
        on right: 11 61 63 102
    compound_statement (100)
        on left: 12 13
        on right: 16 17 122
    non_empty_block_item_list (101)
        on left: 14 15
        on right: 13 15
    function_definition (102)
        on left: 16 17
        on right: 3
    declaration (103)
        on left: 18 19
        on right: 4 6 7 8
    init_declarator_list (104)
        on left: 20 21
        on right: 19 21
    init_declarator (105)
        on left: 22 23
        on right: 20 21
    declaration_specifiers (106)
        on left: 24 25 26 27 28 29 30 31 32 33
        on right: 16 17 18 19 24 26 28 30 32 110 111 112
    storage_class_specifier (107)
        on left: 34 35 36 37 38
        on right: 24 25
    type_specifier (108)
        on left: 39 40 41 42 43 44 45 46 47 48 49 50 51
        on right: 26 27 80 81
    type_qualifier (109)
        on left: 52 53 54
        on right: 10 11 28 29 82 83
    function_specifier (110)
        on left: 55 56
        on right: 30 31
    alignment_specifier (111)
        on left: 57
        on right: 32 33
    declarator (112)
        on left: 58 59
        on right: 16 17 22 23 65 86 87 110
    pointer (113)
        on left: 60 61 62 63
        on right: 58 62 63 97 98
    direct_declarator (114)
        on left: 64 65 66 67 68 69
        on right: 58 59 66 67 68 69
    struct_or_union_specifier (115)
        on left: 70 71 72 73 74 75
        on right: 49
    struct_declaration_list (116)
        on left: 76 77
        on right: 70 71 73 74 77
    struct_declaration (117)
        on left: 78 79
        on right: 76 77
    specifier_qualifier_list (118)
        on left: 80 81 82 83
        on right: 78 79 81 83 95 96
    struct_declarator_list (119)
        on left: 84 85
        on right: 79 85
    struct_declarator (120)
        on left: 86 87 88
        on right: 84 85
    enum_specifier (121)
        on left: 89 90 91
        on right: 50
    enumerator_list (122)
        on left: 92 93
        on right: 89 90 93
    enumeration_constant (123)
        on left: 94
        on right: 92 93
    type_name (124)
        on left: 95 96
        on right: 57 152 160
    abstract_declarator (125)
        on left: 97 98 99
        on right: 96 100 111
    direct_abstract_declarator (126)
        on left: 100 101 102 103 104 105
        on right: 98 99 103 105
    parameter_type_list (127)
        on left: 106 107
        on right: 69 104 105
    parameter_list (128)
        on left: 108 109
        on right: 106 107 109
    parameter_declaration (129)
        on left: 110 111 112
        on right: 108 109
    initializer (130)
        on left: 113 114 115
        on right: 22 116 117
    initializer_list (131)
        on left: 116 117
        on right: 114 115 117
    statement (132)
        on left: 118 119 120 121 122 123 124
        on right: 9 125 126 127 128 129
    iteration_statement (133)
        on left: 125 126 127
        on right: 120
    conditional_statement (134)
        on left: 128 129
        on right: 121
    expression_statement (135)
        on left: 130 131
        on right: 118 127
    primary_expression (136)
        on left: 132 133 134 135 136
        on right: 137
    postfix_expression (137)
        on left: 137 138 139 140 141 142 143 144
        on right: 138 139 140 141 142 143 144 147
    argument_expression_list (138)
        on left: 145 146
        on right: 68 140 146
    unary_expression (139)
        on left: 147 148 149 150 151 152
        on right: 148 149 151 159 192
    unary_operator (140)
        on left: 153 154 155 156 157 158
        on right: 150
    cast_expression (141)
        on left: 159 160
        on right: 150 160 161 162 163 164
    multiplicative_expression (142)
        on left: 161 162 163 164
        on right: 162 163 164 165 166 167
    additive_expression (143)
        on left: 165 166 167
        on right: 166 167 168 169 170
    shift_expression (144)
        on left: 168 169 170
        on right: 169 170 171 172 173 174 175
    relational_expression (145)
        on left: 171 172 173 174 175
        on right: 172 173 174 175 176 177 178
    equality_expression (146)
        on left: 176 177 178
        on right: 177 178 179 180
    and_expression (147)
        on left: 179 180
        on right: 180 181 182
    exclusive_or_expression (148)
        on left: 181 182
        on right: 182 183 184
    inclusive_or_expression (149)
        on left: 183 184
        on right: 184 185 186
    logical_and_expression (150)
        on left: 185 186
        on right: 186 187 188
    logical_or_expression (151)
        on left: 187 188
        on right: 188 189 190
    conditional_expression (152)
        on left: 189 190
        on right: 190 191 206
    assignment_expression (153)
        on left: 191 192
        on right: 66 102 103 113 145 146 192 204 205
    assignment_operator (154)
        on left: 193 194 195 196 197 198 199 200 201 202 203
        on right: 192
    expression (155)
        on left: 204 205
        on right: 119 125 126 128 129 131 136 138 190 205
    constant_expression (156)
        on left: 206
        on right: 87 88


State 0

    0 $accept: • translation_unit $end

    PREPROCESSOR  shift, and go to state 1
    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26

    translation_unit           go to state 27
    external_declaration       go to state 28
    function_definition        go to state 29
    declaration                go to state 30
    declaration_specifiers     go to state 31
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38


State 1

    5 external_declaration: PREPROCESSOR •

    $default  reduce using rule 5 (external_declaration)


State 2

   51 type_specifier: TYPEDEF_NAME •

    $default  reduce using rule 51 (type_specifier)


State 3

   34 storage_class_specifier: TYPEDEF •

    $default  reduce using rule 34 (storage_class_specifier)


State 4

   35 storage_class_specifier: EXTERN •

    $default  reduce using rule 35 (storage_class_specifier)


State 5

   36 storage_class_specifier: STATIC •

    $default  reduce using rule 36 (storage_class_specifier)


State 6

   37 storage_class_specifier: AUTO •

    $default  reduce using rule 37 (storage_class_specifier)


State 7

   38 storage_class_specifier: REGISTER •

    $default  reduce using rule 38 (storage_class_specifier)


State 8

   39 type_specifier: VOID •

    $default  reduce using rule 39 (type_specifier)


State 9

   40 type_specifier: CHAR •

    $default  reduce using rule 40 (type_specifier)


State 10

   41 type_specifier: SHORT •

    $default  reduce using rule 41 (type_specifier)


State 11

   42 type_specifier: INT •

    $default  reduce using rule 42 (type_specifier)


State 12

   43 type_specifier: LONG •

    $default  reduce using rule 43 (type_specifier)


State 13

   44 type_specifier: FLOAT •

    $default  reduce using rule 44 (type_specifier)


State 14

   45 type_specifier: DOUBLE •

    $default  reduce using rule 45 (type_specifier)


State 15

   46 type_specifier: SIGNED •

    $default  reduce using rule 46 (type_specifier)


State 16

   47 type_specifier: UNSIGNED •

    $default  reduce using rule 47 (type_specifier)


State 17

   48 type_specifier: BOOL •

    $default  reduce using rule 48 (type_specifier)


State 18

   70 struct_or_union_specifier: STRUCT • LBRACE struct_declaration_list RBRACE
   71                          | STRUCT • IDENTIFIER LBRACE struct_declaration_list RBRACE
   72                          | STRUCT • IDENTIFIER

    IDENTIFIER  shift, and go to state 39
    LBRACE      shift, and go to state 40


State 19

   73 struct_or_union_specifier: UNION • LBRACE struct_declaration_list RBRACE
   74                          | UNION • IDENTIFIER LBRACE struct_declaration_list RBRACE
   75                          | UNION • IDENTIFIER

    IDENTIFIER  shift, and go to state 41
    LBRACE      shift, and go to state 42


State 20

   89 enum_specifier: ENUM • LBRACE enumerator_list RBRACE
   90               | ENUM • IDENTIFIER LBRACE enumerator_list RBRACE
   91               | ENUM • IDENTIFIER

    IDENTIFIER  shift, and go to state 43
    LBRACE      shift, and go to state 44


State 21

   52 type_qualifier: CONST •

    $default  reduce using rule 52 (type_qualifier)


State 22

   53 type_qualifier: RESTRICT •

    $default  reduce using rule 53 (type_qualifier)


State 23

   54 type_qualifier: VOLATILE •

    $default  reduce using rule 54 (type_qualifier)


State 24

   55 function_specifier: INLINE •

    $default  reduce using rule 55 (function_specifier)


State 25

   56 function_specifier: NORETURN •

    $default  reduce using rule 56 (function_specifier)


State 26

   57 alignment_specifier: ALIGNAS • LPAREN type_name RPAREN

    LPAREN  shift, and go to state 45


State 27

    0 $accept: translation_unit • $end
    2 translation_unit: translation_unit • external_declaration

    $end          shift, and go to state 46
    PREPROCESSOR  shift, and go to state 1
    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26

    external_declaration       go to state 47
    function_definition        go to state 29
    declaration                go to state 30
    declaration_specifiers     go to state 31
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38


State 28

    1 translation_unit: external_declaration •

    $default  reduce using rule 1 (translation_unit)


State 29

    3 external_declaration: function_definition •

    $default  reduce using rule 3 (external_declaration)


State 30

    4 external_declaration: declaration •

    $default  reduce using rule 4 (external_declaration)


State 31

   16 function_definition: declaration_specifiers • declarator declaration_list compound_statement
   17                    | declaration_specifiers • declarator compound_statement
   18 declaration: declaration_specifiers • SEMICOLON
   19            | declaration_specifiers • init_declarator_list SEMICOLON

    IDENTIFIER  shift, and go to state 48
    LPAREN      shift, and go to state 49
    SEMICOLON   shift, and go to state 50
    MULTIPLY    shift, and go to state 51

    init_declarator_list  go to state 52
    init_declarator       go to state 53
    declarator            go to state 54
    pointer               go to state 55
    direct_declarator     go to state 56


State 32

   24 declaration_specifiers: storage_class_specifier • declaration_specifiers
   25                       | storage_class_specifier •

    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26

    $default  reduce using rule 25 (declaration_specifiers)

    declaration_specifiers     go to state 57
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38


State 33

   26 declaration_specifiers: type_specifier • declaration_specifiers
   27                       | type_specifier •

    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26

    $default  reduce using rule 27 (declaration_specifiers)

    declaration_specifiers     go to state 58
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38


State 34

   28 declaration_specifiers: type_qualifier • declaration_specifiers
   29                       | type_qualifier •

    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26

    $default  reduce using rule 29 (declaration_specifiers)

    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38


State 35

   30 declaration_specifiers: function_specifier • declaration_specifiers
   31                       | function_specifier •

    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26

    $default  reduce using rule 31 (declaration_specifiers)

    declaration_specifiers     go to state 60
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38


State 36

   32 declaration_specifiers: alignment_specifier • declaration_specifiers
   33                       | alignment_specifier •

    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26

    $default  reduce using rule 33 (declaration_specifiers)

    declaration_specifiers     go to state 61
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38


State 37

   49 type_specifier: struct_or_union_specifier •

    $default  reduce using rule 49 (type_specifier)


State 38

   50 type_specifier: enum_specifier •

    $default  reduce using rule 50 (type_specifier)


State 39

   71 struct_or_union_specifier: STRUCT IDENTIFIER • LBRACE struct_declaration_list RBRACE
   72                          | STRUCT IDENTIFIER •

    LBRACE  shift, and go to state 62

    $default  reduce using rule 72 (struct_or_union_specifier)


State 40

   70 struct_or_union_specifier: STRUCT LBRACE • struct_declaration_list RBRACE

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23

    type_specifier             go to state 63
    type_qualifier             go to state 64
    struct_or_union_specifier  go to state 37
    struct_declaration_list    go to state 65
    struct_declaration         go to state 66
    specifier_qualifier_list   go to state 67
    enum_specifier             go to state 38


State 41

   74 struct_or_union_specifier: UNION IDENTIFIER • LBRACE struct_declaration_list RBRACE
   75                          | UNION IDENTIFIER •

    LBRACE  shift, and go to state 68

    $default  reduce using rule 75 (struct_or_union_specifier)


State 42

   73 struct_or_union_specifier: UNION LBRACE • struct_declaration_list RBRACE

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23

    type_specifier             go to state 63
    type_qualifier             go to state 64
    struct_or_union_specifier  go to state 37
    struct_declaration_list    go to state 69
    struct_declaration         go to state 66
    specifier_qualifier_list   go to state 67
    enum_specifier             go to state 38


State 43

   90 enum_specifier: ENUM IDENTIFIER • LBRACE enumerator_list RBRACE
   91               | ENUM IDENTIFIER •

    LBRACE  shift, and go to state 70

    $default  reduce using rule 91 (enum_specifier)


State 44

   89 enum_specifier: ENUM LBRACE • enumerator_list RBRACE

    IDENTIFIER  shift, and go to state 71

    enumerator_list       go to state 72
    enumeration_constant  go to state 73


State 45

   57 alignment_specifier: ALIGNAS LPAREN • type_name RPAREN

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23

    type_specifier             go to state 63
    type_qualifier             go to state 64
    struct_or_union_specifier  go to state 37
    specifier_qualifier_list   go to state 74
    enum_specifier             go to state 38
    type_name                  go to state 75


State 46

    0 $accept: translation_unit $end •

    $default  accept


State 47

    2 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 2 (translation_unit)


State 48

   64 direct_declarator: IDENTIFIER •

    $default  reduce using rule 64 (direct_declarator)


State 49

   65 direct_declarator: LPAREN • declarator RPAREN

    IDENTIFIER  shift, and go to state 48
    LPAREN      shift, and go to state 49
    MULTIPLY    shift, and go to state 51

    declarator         go to state 76
    pointer            go to state 55
    direct_declarator  go to state 56


State 50

   18 declaration: declaration_specifiers SEMICOLON •

    $default  reduce using rule 18 (declaration)


State 51

   60 pointer: MULTIPLY •
   61        | MULTIPLY • type_qualifier_list
   62        | MULTIPLY • pointer
   63        | MULTIPLY • type_qualifier_list pointer

    CONST     shift, and go to state 21
    RESTRICT  shift, and go to state 22
    VOLATILE  shift, and go to state 23
    MULTIPLY  shift, and go to state 51

    $default  reduce using rule 60 (pointer)

    type_qualifier_list  go to state 77
    type_qualifier       go to state 78
    pointer              go to state 79


State 52

   19 declaration: declaration_specifiers init_declarator_list • SEMICOLON
   21 init_declarator_list: init_declarator_list • COMMA init_declarator

    SEMICOLON  shift, and go to state 80
    COMMA      shift, and go to state 81


State 53

   20 init_declarator_list: init_declarator •

    $default  reduce using rule 20 (init_declarator_list)


State 54

   16 function_definition: declaration_specifiers declarator • declaration_list compound_statement
   17                    | declaration_specifiers declarator • compound_statement
   22 init_declarator: declarator • ASSIGN initializer
   23                | declarator •

    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    LBRACE        shift, and go to state 82
    ASSIGN        shift, and go to state 83

    $default  reduce using rule 23 (init_declarator)

    declaration_list           go to state 84
    compound_statement         go to state 85
    declaration                go to state 86
    declaration_specifiers     go to state 87
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38


State 55

   58 declarator: pointer • direct_declarator

    IDENTIFIER  shift, and go to state 48
    LPAREN      shift, and go to state 49

    direct_declarator  go to state 88


State 56

   59 declarator: direct_declarator •
   66 direct_declarator: direct_declarator • LSQBRACKET assignment_expression RSQBRACKET
   67                  | direct_declarator • LPAREN RPAREN
   68                  | direct_declarator • LPAREN argument_expression_list RPAREN
   69                  | direct_declarator • LPAREN parameter_type_list RPAREN

    LPAREN      shift, and go to state 89
    LSQBRACKET  shift, and go to state 90

    $default  reduce using rule 59 (declarator)


State 57

   24 declaration_specifiers: storage_class_specifier declaration_specifiers •

    $default  reduce using rule 24 (declaration_specifiers)


State 58

   26 declaration_specifiers: type_specifier declaration_specifiers •

    $default  reduce using rule 26 (declaration_specifiers)


State 59

   28 declaration_specifiers: type_qualifier declaration_specifiers •

    $default  reduce using rule 28 (declaration_specifiers)


State 60

   30 declaration_specifiers: function_specifier declaration_specifiers •

    $default  reduce using rule 30 (declaration_specifiers)


State 61

   32 declaration_specifiers: alignment_specifier declaration_specifiers •

    $default  reduce using rule 32 (declaration_specifiers)


State 62

   71 struct_or_union_specifier: STRUCT IDENTIFIER LBRACE • struct_declaration_list RBRACE

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23

    type_specifier             go to state 63
    type_qualifier             go to state 64
    struct_or_union_specifier  go to state 37
    struct_declaration_list    go to state 91
    struct_declaration         go to state 66
    specifier_qualifier_list   go to state 67
    enum_specifier             go to state 38


State 63

   80 specifier_qualifier_list: type_specifier •
   81                         | type_specifier • specifier_qualifier_list

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23

    $default  reduce using rule 80 (specifier_qualifier_list)

    type_specifier             go to state 63
    type_qualifier             go to state 64
    struct_or_union_specifier  go to state 37
    specifier_qualifier_list   go to state 92
    enum_specifier             go to state 38


State 64

   82 specifier_qualifier_list: type_qualifier •
   83                         | type_qualifier • specifier_qualifier_list

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23

    $default  reduce using rule 82 (specifier_qualifier_list)

    type_specifier             go to state 63
    type_qualifier             go to state 64
    struct_or_union_specifier  go to state 37
    specifier_qualifier_list   go to state 93
    enum_specifier             go to state 38


State 65

   70 struct_or_union_specifier: STRUCT LBRACE struct_declaration_list • RBRACE
   77 struct_declaration_list: struct_declaration_list • struct_declaration

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    RBRACE        shift, and go to state 94

    type_specifier             go to state 63
    type_qualifier             go to state 64
    struct_or_union_specifier  go to state 37
    struct_declaration         go to state 95
    specifier_qualifier_list   go to state 67
    enum_specifier             go to state 38


State 66

   76 struct_declaration_list: struct_declaration •

    $default  reduce using rule 76 (struct_declaration_list)


State 67

   78 struct_declaration: specifier_qualifier_list • SEMICOLON
   79                   | specifier_qualifier_list • struct_declarator_list SEMICOLON

    IDENTIFIER  shift, and go to state 48
    LPAREN      shift, and go to state 49
    SEMICOLON   shift, and go to state 96
    COLON       shift, and go to state 97
    MULTIPLY    shift, and go to state 51

    declarator              go to state 98
    pointer                 go to state 55
    direct_declarator       go to state 56
    struct_declarator_list  go to state 99
    struct_declarator       go to state 100


State 68

   74 struct_or_union_specifier: UNION IDENTIFIER LBRACE • struct_declaration_list RBRACE

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23

    type_specifier             go to state 63
    type_qualifier             go to state 64
    struct_or_union_specifier  go to state 37
    struct_declaration_list    go to state 101
    struct_declaration         go to state 66
    specifier_qualifier_list   go to state 67
    enum_specifier             go to state 38


State 69

   73 struct_or_union_specifier: UNION LBRACE struct_declaration_list • RBRACE
   77 struct_declaration_list: struct_declaration_list • struct_declaration

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    RBRACE        shift, and go to state 102

    type_specifier             go to state 63
    type_qualifier             go to state 64
    struct_or_union_specifier  go to state 37
    struct_declaration         go to state 95
    specifier_qualifier_list   go to state 67
    enum_specifier             go to state 38


State 70

   90 enum_specifier: ENUM IDENTIFIER LBRACE • enumerator_list RBRACE

    IDENTIFIER  shift, and go to state 71

    enumerator_list       go to state 103
    enumeration_constant  go to state 73


State 71

   94 enumeration_constant: IDENTIFIER •

    $default  reduce using rule 94 (enumeration_constant)


State 72

   89 enum_specifier: ENUM LBRACE enumerator_list • RBRACE
   93 enumerator_list: enumerator_list • COMMA enumeration_constant

    RBRACE  shift, and go to state 104
    COMMA   shift, and go to state 105


State 73

   92 enumerator_list: enumeration_constant •

    $default  reduce using rule 92 (enumerator_list)


State 74

   95 type_name: specifier_qualifier_list •
   96          | specifier_qualifier_list • abstract_declarator

    LPAREN      shift, and go to state 106
    LSQBRACKET  shift, and go to state 107
    MULTIPLY    shift, and go to state 51

    $default  reduce using rule 95 (type_name)

    pointer                     go to state 108
    abstract_declarator         go to state 109
    direct_abstract_declarator  go to state 110


State 75

   57 alignment_specifier: ALIGNAS LPAREN type_name • RPAREN

    RPAREN  shift, and go to state 111


State 76

   65 direct_declarator: LPAREN declarator • RPAREN

    RPAREN  shift, and go to state 112


State 77

   11 type_qualifier_list: type_qualifier_list • type_qualifier
   61 pointer: MULTIPLY type_qualifier_list •
   63        | MULTIPLY type_qualifier_list • pointer

    CONST     shift, and go to state 21
    RESTRICT  shift, and go to state 22
    VOLATILE  shift, and go to state 23
    MULTIPLY  shift, and go to state 51

    $default  reduce using rule 61 (pointer)

    type_qualifier  go to state 113
    pointer         go to state 114


State 78

   10 type_qualifier_list: type_qualifier •

    $default  reduce using rule 10 (type_qualifier_list)


State 79

   62 pointer: MULTIPLY pointer •

    $default  reduce using rule 62 (pointer)


State 80

   19 declaration: declaration_specifiers init_declarator_list SEMICOLON •

    $default  reduce using rule 19 (declaration)


State 81

   21 init_declarator_list: init_declarator_list COMMA • init_declarator

    IDENTIFIER  shift, and go to state 48
    LPAREN      shift, and go to state 49
    MULTIPLY    shift, and go to state 51

    init_declarator    go to state 115
    declarator         go to state 116
    pointer            go to state 55
    direct_declarator  go to state 56


State 82

   12 compound_statement: LBRACE • RBRACE
   13                   | LBRACE • non_empty_block_item_list RBRACE

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    TYPEDEF_NAME    shift, and go to state 2
    TYPEDEF         shift, and go to state 3
    EXTERN          shift, and go to state 4
    STATIC          shift, and go to state 5
    AUTO            shift, and go to state 6
    REGISTER        shift, and go to state 7
    VOID            shift, and go to state 8
    CHAR            shift, and go to state 9
    SHORT           shift, and go to state 10
    INT             shift, and go to state 11
    LONG            shift, and go to state 12
    FLOAT           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    SIGNED          shift, and go to state 15
    UNSIGNED        shift, and go to state 16
    BOOL            shift, and go to state 17
    STRUCT          shift, and go to state 18
    UNION           shift, and go to state 19
    ENUM            shift, and go to state 20
    CONST           shift, and go to state 21
    RESTRICT        shift, and go to state 22
    VOLATILE        shift, and go to state 23
    INLINE          shift, and go to state 24
    NORETURN        shift, and go to state 25
    ALIGNAS         shift, and go to state 26
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    LBRACE          shift, and go to state 82
    RBRACE          shift, and go to state 123
    SEMICOLON       shift, and go to state 124
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    IF              shift, and go to state 131
    WHILE           shift, and go to state 132
    BREAK           shift, and go to state 133
    CONTINUE        shift, and go to state 134
    FOR             shift, and go to state 135
    DO              shift, and go to state 136
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138
    RETURN          shift, and go to state 139

    block_item                 go to state 140
    compound_statement         go to state 141
    non_empty_block_item_list  go to state 142
    declaration                go to state 143
    declaration_specifiers     go to state 87
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38
    statement                  go to state 144
    iteration_statement        go to state 145
    conditional_statement      go to state 146
    expression_statement       go to state 147
    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 164
    expression                 go to state 165


State 83

   22 init_declarator: declarator ASSIGN • initializer

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    LBRACE          shift, and go to state 166
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    initializer                go to state 167
    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 168


State 84

    7 declaration_list: declaration_list • declaration
   16 function_definition: declaration_specifiers declarator declaration_list • compound_statement

    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    LBRACE        shift, and go to state 82

    compound_statement         go to state 169
    declaration                go to state 170
    declaration_specifiers     go to state 87
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38


State 85

   17 function_definition: declaration_specifiers declarator compound_statement •

    $default  reduce using rule 17 (function_definition)


State 86

    6 declaration_list: declaration •

    $default  reduce using rule 6 (declaration_list)


State 87

   18 declaration: declaration_specifiers • SEMICOLON
   19            | declaration_specifiers • init_declarator_list SEMICOLON

    IDENTIFIER  shift, and go to state 48
    LPAREN      shift, and go to state 49
    SEMICOLON   shift, and go to state 50
    MULTIPLY    shift, and go to state 51

    init_declarator_list  go to state 52
    init_declarator       go to state 53
    declarator            go to state 116
    pointer               go to state 55
    direct_declarator     go to state 56


State 88

   58 declarator: pointer direct_declarator •
   66 direct_declarator: direct_declarator • LSQBRACKET assignment_expression RSQBRACKET
   67                  | direct_declarator • LPAREN RPAREN
   68                  | direct_declarator • LPAREN argument_expression_list RPAREN
   69                  | direct_declarator • LPAREN parameter_type_list RPAREN

    LPAREN      shift, and go to state 89
    LSQBRACKET  shift, and go to state 90

    $default  reduce using rule 58 (declarator)


State 89

   67 direct_declarator: direct_declarator LPAREN • RPAREN
   68                  | direct_declarator LPAREN • argument_expression_list RPAREN
   69                  | direct_declarator LPAREN • parameter_type_list RPAREN

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    TYPEDEF_NAME    shift, and go to state 2
    TYPEDEF         shift, and go to state 3
    EXTERN          shift, and go to state 4
    STATIC          shift, and go to state 5
    AUTO            shift, and go to state 6
    REGISTER        shift, and go to state 7
    VOID            shift, and go to state 8
    CHAR            shift, and go to state 9
    SHORT           shift, and go to state 10
    INT             shift, and go to state 11
    LONG            shift, and go to state 12
    FLOAT           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    SIGNED          shift, and go to state 15
    UNSIGNED        shift, and go to state 16
    BOOL            shift, and go to state 17
    STRUCT          shift, and go to state 18
    UNION           shift, and go to state 19
    ENUM            shift, and go to state 20
    CONST           shift, and go to state 21
    RESTRICT        shift, and go to state 22
    VOLATILE        shift, and go to state 23
    INLINE          shift, and go to state 24
    NORETURN        shift, and go to state 25
    ALIGNAS         shift, and go to state 26
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    RPAREN          shift, and go to state 171
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    declaration_specifiers     go to state 172
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38
    parameter_type_list        go to state 173
    parameter_list             go to state 174
    parameter_declaration      go to state 175
    primary_expression         go to state 148
    postfix_expression         go to state 149
    argument_expression_list   go to state 176
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 177


State 90

   66 direct_declarator: direct_declarator LSQBRACKET • assignment_expression RSQBRACKET

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 178


State 91

   71 struct_or_union_specifier: STRUCT IDENTIFIER LBRACE struct_declaration_list • RBRACE
   77 struct_declaration_list: struct_declaration_list • struct_declaration

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    RBRACE        shift, and go to state 179

    type_specifier             go to state 63
    type_qualifier             go to state 64
    struct_or_union_specifier  go to state 37
    struct_declaration         go to state 95
    specifier_qualifier_list   go to state 67
    enum_specifier             go to state 38


State 92

   81 specifier_qualifier_list: type_specifier specifier_qualifier_list •

    $default  reduce using rule 81 (specifier_qualifier_list)


State 93

   83 specifier_qualifier_list: type_qualifier specifier_qualifier_list •

    $default  reduce using rule 83 (specifier_qualifier_list)


State 94

   70 struct_or_union_specifier: STRUCT LBRACE struct_declaration_list RBRACE •

    $default  reduce using rule 70 (struct_or_union_specifier)


State 95

   77 struct_declaration_list: struct_declaration_list struct_declaration •

    $default  reduce using rule 77 (struct_declaration_list)


State 96

   78 struct_declaration: specifier_qualifier_list SEMICOLON •

    $default  reduce using rule 78 (struct_declaration)


State 97

   88 struct_declarator: COLON • constant_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 180
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 181
    constant_expression        go to state 182


State 98

   86 struct_declarator: declarator •
   87                  | declarator • COLON constant_expression

    COLON  shift, and go to state 183

    $default  reduce using rule 86 (struct_declarator)


State 99

   79 struct_declaration: specifier_qualifier_list struct_declarator_list • SEMICOLON
   85 struct_declarator_list: struct_declarator_list • COMMA struct_declarator

    SEMICOLON  shift, and go to state 184
    COMMA      shift, and go to state 185


State 100

   84 struct_declarator_list: struct_declarator •

    $default  reduce using rule 84 (struct_declarator_list)


State 101

   74 struct_or_union_specifier: UNION IDENTIFIER LBRACE struct_declaration_list • RBRACE
   77 struct_declaration_list: struct_declaration_list • struct_declaration

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    RBRACE        shift, and go to state 186

    type_specifier             go to state 63
    type_qualifier             go to state 64
    struct_or_union_specifier  go to state 37
    struct_declaration         go to state 95
    specifier_qualifier_list   go to state 67
    enum_specifier             go to state 38


State 102

   73 struct_or_union_specifier: UNION LBRACE struct_declaration_list RBRACE •

    $default  reduce using rule 73 (struct_or_union_specifier)


State 103

   90 enum_specifier: ENUM IDENTIFIER LBRACE enumerator_list • RBRACE
   93 enumerator_list: enumerator_list • COMMA enumeration_constant

    RBRACE  shift, and go to state 187
    COMMA   shift, and go to state 105


State 104

   89 enum_specifier: ENUM LBRACE enumerator_list RBRACE •

    $default  reduce using rule 89 (enum_specifier)


State 105

   93 enumerator_list: enumerator_list COMMA • enumeration_constant

    IDENTIFIER  shift, and go to state 71

    enumeration_constant  go to state 188


State 106

  100 direct_abstract_declarator: LPAREN • abstract_declarator RPAREN
  104                           | LPAREN • parameter_type_list RPAREN

    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    LPAREN        shift, and go to state 106
    LSQBRACKET    shift, and go to state 107
    MULTIPLY      shift, and go to state 51

    declaration_specifiers      go to state 172
    storage_class_specifier     go to state 32
    type_specifier              go to state 33
    type_qualifier              go to state 34
    function_specifier          go to state 35
    alignment_specifier         go to state 36
    pointer                     go to state 108
    struct_or_union_specifier   go to state 37
    enum_specifier              go to state 38
    abstract_declarator         go to state 189
    direct_abstract_declarator  go to state 110
    parameter_type_list         go to state 190
    parameter_list              go to state 174
    parameter_declaration       go to state 175


State 107

  101 direct_abstract_declarator: LSQBRACKET • RSQBRACKET
  102                           | LSQBRACKET • type_qualifier_list assignment_expression RSQBRACKET

    CONST       shift, and go to state 21
    RESTRICT    shift, and go to state 22
    VOLATILE    shift, and go to state 23
    RSQBRACKET  shift, and go to state 191

    type_qualifier_list  go to state 192
    type_qualifier       go to state 78


State 108

   97 abstract_declarator: pointer •
   98                    | pointer • direct_abstract_declarator

    LPAREN      shift, and go to state 106
    LSQBRACKET  shift, and go to state 107

    $default  reduce using rule 97 (abstract_declarator)

    direct_abstract_declarator  go to state 193


State 109

   96 type_name: specifier_qualifier_list abstract_declarator •

    $default  reduce using rule 96 (type_name)


State 110

   99 abstract_declarator: direct_abstract_declarator •
  103 direct_abstract_declarator: direct_abstract_declarator • LSQBRACKET assignment_expression RSQBRACKET
  105                           | direct_abstract_declarator • LPAREN parameter_type_list RPAREN

    LPAREN      shift, and go to state 194
    LSQBRACKET  shift, and go to state 195

    $default  reduce using rule 99 (abstract_declarator)


State 111

   57 alignment_specifier: ALIGNAS LPAREN type_name RPAREN •

    $default  reduce using rule 57 (alignment_specifier)


State 112

   65 direct_declarator: LPAREN declarator RPAREN •

    $default  reduce using rule 65 (direct_declarator)


State 113

   11 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 11 (type_qualifier_list)


State 114

   63 pointer: MULTIPLY type_qualifier_list pointer •

    $default  reduce using rule 63 (pointer)


State 115

   21 init_declarator_list: init_declarator_list COMMA init_declarator •

    $default  reduce using rule 21 (init_declarator_list)


State 116

   22 init_declarator: declarator • ASSIGN initializer
   23                | declarator •

    ASSIGN  shift, and go to state 83

    $default  reduce using rule 23 (init_declarator)


State 117

  132 primary_expression: IDENTIFIER •

    $default  reduce using rule 132 (primary_expression)


State 118

  133 primary_expression: NUMBER •

    $default  reduce using rule 133 (primary_expression)


State 119

  134 primary_expression: CHAR_LITERAL •

    $default  reduce using rule 134 (primary_expression)


State 120

  135 primary_expression: STRING_LITERAL •

    $default  reduce using rule 135 (primary_expression)


State 121

  151 unary_expression: SIZEOF • unary_expression
  152                 | SIZEOF • LPAREN type_name RPAREN

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 196
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression  go to state 148
    postfix_expression  go to state 149
    unary_expression    go to state 197
    unary_operator      go to state 151


State 122

  136 primary_expression: LPAREN • expression RPAREN
  160 cast_expression: LPAREN • type_name RPAREN cast_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    TYPEDEF_NAME    shift, and go to state 2
    VOID            shift, and go to state 8
    CHAR            shift, and go to state 9
    SHORT           shift, and go to state 10
    INT             shift, and go to state 11
    LONG            shift, and go to state 12
    FLOAT           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    SIGNED          shift, and go to state 15
    UNSIGNED        shift, and go to state 16
    BOOL            shift, and go to state 17
    STRUCT          shift, and go to state 18
    UNION           shift, and go to state 19
    ENUM            shift, and go to state 20
    CONST           shift, and go to state 21
    RESTRICT        shift, and go to state 22
    VOLATILE        shift, and go to state 23
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    type_specifier             go to state 63
    type_qualifier             go to state 64
    struct_or_union_specifier  go to state 37
    specifier_qualifier_list   go to state 74
    enum_specifier             go to state 38
    type_name                  go to state 198
    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 164
    expression                 go to state 199


State 123

   12 compound_statement: LBRACE RBRACE •

    $default  reduce using rule 12 (compound_statement)


State 124

  130 expression_statement: SEMICOLON •

    $default  reduce using rule 130 (expression_statement)


State 125

  153 unary_operator: BIT_AND •

    $default  reduce using rule 153 (unary_operator)


State 126

  158 unary_operator: NOT •

    $default  reduce using rule 158 (unary_operator)


State 127

  157 unary_operator: BIT_NOT •

    $default  reduce using rule 157 (unary_operator)


State 128

  155 unary_operator: PLUS •

    $default  reduce using rule 155 (unary_operator)


State 129

  156 unary_operator: MINUS •

    $default  reduce using rule 156 (unary_operator)


State 130

  154 unary_operator: MULTIPLY •

    $default  reduce using rule 154 (unary_operator)


State 131

  128 conditional_statement: IF • LPAREN expression RPAREN statement
  129                      | IF • LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 200


State 132

  126 iteration_statement: WHILE • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 201


State 133

  123 statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 202


State 134

  124 statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 203


State 135

  127 iteration_statement: FOR • LPAREN expression_statement expression_statement expression_statement RPAREN statement

    LPAREN  shift, and go to state 204


State 136

  125 iteration_statement: DO • statement WHILE LPAREN expression RPAREN SEMICOLON

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    LBRACE          shift, and go to state 82
    SEMICOLON       shift, and go to state 124
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    IF              shift, and go to state 131
    WHILE           shift, and go to state 132
    BREAK           shift, and go to state 133
    CONTINUE        shift, and go to state 134
    FOR             shift, and go to state 135
    DO              shift, and go to state 136
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138
    RETURN          shift, and go to state 139

    compound_statement         go to state 141
    statement                  go to state 205
    iteration_statement        go to state 145
    conditional_statement      go to state 146
    expression_statement       go to state 147
    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 164
    expression                 go to state 165


State 137

  148 unary_expression: INCREMENT • unary_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 206
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression  go to state 148
    postfix_expression  go to state 149
    unary_expression    go to state 207
    unary_operator      go to state 151


State 138

  149 unary_expression: DECREMENT • unary_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 206
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression  go to state 148
    postfix_expression  go to state 149
    unary_expression    go to state 208
    unary_operator      go to state 151


State 139

  119 statement: RETURN • expression SEMICOLON

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 164
    expression                 go to state 209


State 140

   14 non_empty_block_item_list: block_item •

    $default  reduce using rule 14 (non_empty_block_item_list)


State 141

  122 statement: compound_statement •

    $default  reduce using rule 122 (statement)


State 142

   13 compound_statement: LBRACE non_empty_block_item_list • RBRACE
   15 non_empty_block_item_list: non_empty_block_item_list • block_item

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    TYPEDEF_NAME    shift, and go to state 2
    TYPEDEF         shift, and go to state 3
    EXTERN          shift, and go to state 4
    STATIC          shift, and go to state 5
    AUTO            shift, and go to state 6
    REGISTER        shift, and go to state 7
    VOID            shift, and go to state 8
    CHAR            shift, and go to state 9
    SHORT           shift, and go to state 10
    INT             shift, and go to state 11
    LONG            shift, and go to state 12
    FLOAT           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    SIGNED          shift, and go to state 15
    UNSIGNED        shift, and go to state 16
    BOOL            shift, and go to state 17
    STRUCT          shift, and go to state 18
    UNION           shift, and go to state 19
    ENUM            shift, and go to state 20
    CONST           shift, and go to state 21
    RESTRICT        shift, and go to state 22
    VOLATILE        shift, and go to state 23
    INLINE          shift, and go to state 24
    NORETURN        shift, and go to state 25
    ALIGNAS         shift, and go to state 26
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    LBRACE          shift, and go to state 82
    RBRACE          shift, and go to state 210
    SEMICOLON       shift, and go to state 124
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    IF              shift, and go to state 131
    WHILE           shift, and go to state 132
    BREAK           shift, and go to state 133
    CONTINUE        shift, and go to state 134
    FOR             shift, and go to state 135
    DO              shift, and go to state 136
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138
    RETURN          shift, and go to state 139

    block_item                 go to state 211
    compound_statement         go to state 141
    declaration                go to state 143
    declaration_specifiers     go to state 87
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38
    statement                  go to state 144
    iteration_statement        go to state 145
    conditional_statement      go to state 146
    expression_statement       go to state 147
    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 164
    expression                 go to state 165


State 143

    8 block_item: declaration •

    $default  reduce using rule 8 (block_item)


State 144

    9 block_item: statement •

    $default  reduce using rule 9 (block_item)


State 145

  120 statement: iteration_statement •

    $default  reduce using rule 120 (statement)


State 146

  121 statement: conditional_statement •

    $default  reduce using rule 121 (statement)


State 147

  118 statement: expression_statement •

    $default  reduce using rule 118 (statement)


State 148

  137 postfix_expression: primary_expression •

    $default  reduce using rule 137 (postfix_expression)


State 149

  138 postfix_expression: postfix_expression • LSQBRACKET expression RSQBRACKET
  139                   | postfix_expression • LPAREN RPAREN
  140                   | postfix_expression • LPAREN argument_expression_list RPAREN
  141                   | postfix_expression • DOT IDENTIFIER
  142                   | postfix_expression • ARROW IDENTIFIER
  143                   | postfix_expression • INCREMENT
  144                   | postfix_expression • DECREMENT
  147 unary_expression: postfix_expression •

    LPAREN      shift, and go to state 212
    LSQBRACKET  shift, and go to state 213
    DOT         shift, and go to state 214
    ARROW       shift, and go to state 215
    INCREMENT   shift, and go to state 216
    DECREMENT   shift, and go to state 217

    $default  reduce using rule 147 (unary_expression)


State 150

  159 cast_expression: unary_expression •
  192 assignment_expression: unary_expression • assignment_operator assignment_expression

    ASSIGN              shift, and go to state 218
    PLUS_ASSIGN         shift, and go to state 219
    MINUS_ASSIGN        shift, and go to state 220
    MUL_ASSIGN          shift, and go to state 221
    DIV_ASSIGN          shift, and go to state 222
    MOD_ASSIGN          shift, and go to state 223
    SHIFT_LEFT_ASSIGN   shift, and go to state 224
    SHIFT_RIGHT_ASSIGN  shift, and go to state 225
    BIT_AND_ASSIGN      shift, and go to state 226
    BIT_XOR_ASSIGN      shift, and go to state 227
    BIT_OR_ASSIGN       shift, and go to state 228

    $default  reduce using rule 159 (cast_expression)

    assignment_operator  go to state 229


State 151

  150 unary_expression: unary_operator • cast_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression  go to state 148
    postfix_expression  go to state 149
    unary_expression    go to state 180
    unary_operator      go to state 151
    cast_expression     go to state 230


State 152

  161 multiplicative_expression: cast_expression •

    $default  reduce using rule 161 (multiplicative_expression)


State 153

  162 multiplicative_expression: multiplicative_expression • MULTIPLY cast_expression
  163                          | multiplicative_expression • DIVIDE cast_expression
  164                          | multiplicative_expression • MODULO cast_expression
  165 additive_expression: multiplicative_expression •

    MULTIPLY  shift, and go to state 231
    DIVIDE    shift, and go to state 232
    MODULO    shift, and go to state 233

    $default  reduce using rule 165 (additive_expression)


State 154

  166 additive_expression: additive_expression • PLUS multiplicative_expression
  167                    | additive_expression • MINUS multiplicative_expression
  168 shift_expression: additive_expression •

    PLUS   shift, and go to state 234
    MINUS  shift, and go to state 235

    $default  reduce using rule 168 (shift_expression)


State 155

  169 shift_expression: shift_expression • SHIFT_LEFT additive_expression
  170                 | shift_expression • SHIFT_RIGHT additive_expression
  171 relational_expression: shift_expression •

    SHIFT_LEFT   shift, and go to state 236
    SHIFT_RIGHT  shift, and go to state 237

    $default  reduce using rule 171 (relational_expression)


State 156

  172 relational_expression: relational_expression • LESS shift_expression
  173                      | relational_expression • GREATER shift_expression
  174                      | relational_expression • LESS_EQUAL shift_expression
  175                      | relational_expression • GREATER_EQUAL shift_expression
  176 equality_expression: relational_expression •

    LESS           shift, and go to state 238
    GREATER        shift, and go to state 239
    LESS_EQUAL     shift, and go to state 240
    GREATER_EQUAL  shift, and go to state 241

    $default  reduce using rule 176 (equality_expression)


State 157

  177 equality_expression: equality_expression • EQUAL relational_expression
  178                    | equality_expression • NOT_EQUAL relational_expression
  179 and_expression: equality_expression •

    EQUAL      shift, and go to state 242
    NOT_EQUAL  shift, and go to state 243

    $default  reduce using rule 179 (and_expression)


State 158

  180 and_expression: and_expression • BIT_AND equality_expression
  181 exclusive_or_expression: and_expression •

    BIT_AND  shift, and go to state 244

    $default  reduce using rule 181 (exclusive_or_expression)


State 159

  182 exclusive_or_expression: exclusive_or_expression • BIT_XOR and_expression
  183 inclusive_or_expression: exclusive_or_expression •

    BIT_XOR  shift, and go to state 245

    $default  reduce using rule 183 (inclusive_or_expression)


State 160

  184 inclusive_or_expression: inclusive_or_expression • BIT_OR exclusive_or_expression
  185 logical_and_expression: inclusive_or_expression •

    BIT_OR  shift, and go to state 246

    $default  reduce using rule 185 (logical_and_expression)


State 161

  186 logical_and_expression: logical_and_expression • AND inclusive_or_expression
  187 logical_or_expression: logical_and_expression •

    AND  shift, and go to state 247

    $default  reduce using rule 187 (logical_or_expression)


State 162

  188 logical_or_expression: logical_or_expression • OR logical_and_expression
  189 conditional_expression: logical_or_expression •
  190                       | logical_or_expression • QUESTION expression COLON conditional_expression

    QUESTION  shift, and go to state 248
    OR        shift, and go to state 249

    $default  reduce using rule 189 (conditional_expression)


State 163

  191 assignment_expression: conditional_expression •

    $default  reduce using rule 191 (assignment_expression)


State 164

  204 expression: assignment_expression •

    $default  reduce using rule 204 (expression)


State 165

  131 expression_statement: expression • SEMICOLON
  205 expression: expression • COMMA assignment_expression

    SEMICOLON  shift, and go to state 250
    COMMA      shift, and go to state 251


State 166

  114 initializer: LBRACE • initializer_list RBRACE
  115            | LBRACE • initializer_list COMMA RBRACE

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    LBRACE          shift, and go to state 166
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    initializer                go to state 252
    initializer_list           go to state 253
    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 168


State 167

   22 init_declarator: declarator ASSIGN initializer •

    $default  reduce using rule 22 (init_declarator)


State 168

  113 initializer: assignment_expression •

    $default  reduce using rule 113 (initializer)


State 169

   16 function_definition: declaration_specifiers declarator declaration_list compound_statement •

    $default  reduce using rule 16 (function_definition)


State 170

    7 declaration_list: declaration_list declaration •

    $default  reduce using rule 7 (declaration_list)


State 171

   67 direct_declarator: direct_declarator LPAREN RPAREN •

    $default  reduce using rule 67 (direct_declarator)


State 172

  110 parameter_declaration: declaration_specifiers • declarator
  111                      | declaration_specifiers • abstract_declarator
  112                      | declaration_specifiers •

    IDENTIFIER  shift, and go to state 48
    LPAREN      shift, and go to state 254
    LSQBRACKET  shift, and go to state 107
    MULTIPLY    shift, and go to state 51

    $default  reduce using rule 112 (parameter_declaration)

    declarator                  go to state 255
    pointer                     go to state 256
    direct_declarator           go to state 56
    abstract_declarator         go to state 257
    direct_abstract_declarator  go to state 110


State 173

   69 direct_declarator: direct_declarator LPAREN parameter_type_list • RPAREN

    RPAREN  shift, and go to state 258


State 174

  106 parameter_type_list: parameter_list •
  107                    | parameter_list • COMMA ELLIPSIS
  109 parameter_list: parameter_list • COMMA parameter_declaration

    COMMA  shift, and go to state 259

    $default  reduce using rule 106 (parameter_type_list)


State 175

  108 parameter_list: parameter_declaration •

    $default  reduce using rule 108 (parameter_list)


State 176

   68 direct_declarator: direct_declarator LPAREN argument_expression_list • RPAREN
  146 argument_expression_list: argument_expression_list • COMMA assignment_expression

    RPAREN  shift, and go to state 260
    COMMA   shift, and go to state 261


State 177

  145 argument_expression_list: assignment_expression •

    $default  reduce using rule 145 (argument_expression_list)


State 178

   66 direct_declarator: direct_declarator LSQBRACKET assignment_expression • RSQBRACKET

    RSQBRACKET  shift, and go to state 262


State 179

   71 struct_or_union_specifier: STRUCT IDENTIFIER LBRACE struct_declaration_list RBRACE •

    $default  reduce using rule 71 (struct_or_union_specifier)


State 180

  159 cast_expression: unary_expression •

    $default  reduce using rule 159 (cast_expression)


State 181

  206 constant_expression: conditional_expression •

    $default  reduce using rule 206 (constant_expression)


State 182

   88 struct_declarator: COLON constant_expression •

    $default  reduce using rule 88 (struct_declarator)


State 183

   87 struct_declarator: declarator COLON • constant_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 180
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 181
    constant_expression        go to state 263


State 184

   79 struct_declaration: specifier_qualifier_list struct_declarator_list SEMICOLON •

    $default  reduce using rule 79 (struct_declaration)


State 185

   85 struct_declarator_list: struct_declarator_list COMMA • struct_declarator

    IDENTIFIER  shift, and go to state 48
    LPAREN      shift, and go to state 49
    COLON       shift, and go to state 97
    MULTIPLY    shift, and go to state 51

    declarator         go to state 98
    pointer            go to state 55
    direct_declarator  go to state 56
    struct_declarator  go to state 264


State 186

   74 struct_or_union_specifier: UNION IDENTIFIER LBRACE struct_declaration_list RBRACE •

    $default  reduce using rule 74 (struct_or_union_specifier)


State 187

   90 enum_specifier: ENUM IDENTIFIER LBRACE enumerator_list RBRACE •

    $default  reduce using rule 90 (enum_specifier)


State 188

   93 enumerator_list: enumerator_list COMMA enumeration_constant •

    $default  reduce using rule 93 (enumerator_list)


State 189

  100 direct_abstract_declarator: LPAREN abstract_declarator • RPAREN

    RPAREN  shift, and go to state 265


State 190

  104 direct_abstract_declarator: LPAREN parameter_type_list • RPAREN

    RPAREN  shift, and go to state 266


State 191

  101 direct_abstract_declarator: LSQBRACKET RSQBRACKET •

    $default  reduce using rule 101 (direct_abstract_declarator)


State 192

   11 type_qualifier_list: type_qualifier_list • type_qualifier
  102 direct_abstract_declarator: LSQBRACKET type_qualifier_list • assignment_expression RSQBRACKET

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    CONST           shift, and go to state 21
    RESTRICT        shift, and go to state 22
    VOLATILE        shift, and go to state 23
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    type_qualifier             go to state 113
    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 267


State 193

   98 abstract_declarator: pointer direct_abstract_declarator •
  103 direct_abstract_declarator: direct_abstract_declarator • LSQBRACKET assignment_expression RSQBRACKET
  105                           | direct_abstract_declarator • LPAREN parameter_type_list RPAREN

    LPAREN      shift, and go to state 194
    LSQBRACKET  shift, and go to state 195

    $default  reduce using rule 98 (abstract_declarator)


State 194

  105 direct_abstract_declarator: direct_abstract_declarator LPAREN • parameter_type_list RPAREN

    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26

    declaration_specifiers     go to state 172
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38
    parameter_type_list        go to state 268
    parameter_list             go to state 174
    parameter_declaration      go to state 175


State 195

  103 direct_abstract_declarator: direct_abstract_declarator LSQBRACKET • assignment_expression RSQBRACKET

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 269


State 196

  136 primary_expression: LPAREN • expression RPAREN
  152 unary_expression: SIZEOF LPAREN • type_name RPAREN

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    TYPEDEF_NAME    shift, and go to state 2
    VOID            shift, and go to state 8
    CHAR            shift, and go to state 9
    SHORT           shift, and go to state 10
    INT             shift, and go to state 11
    LONG            shift, and go to state 12
    FLOAT           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    SIGNED          shift, and go to state 15
    UNSIGNED        shift, and go to state 16
    BOOL            shift, and go to state 17
    STRUCT          shift, and go to state 18
    UNION           shift, and go to state 19
    ENUM            shift, and go to state 20
    CONST           shift, and go to state 21
    RESTRICT        shift, and go to state 22
    VOLATILE        shift, and go to state 23
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    type_specifier             go to state 63
    type_qualifier             go to state 64
    struct_or_union_specifier  go to state 37
    specifier_qualifier_list   go to state 74
    enum_specifier             go to state 38
    type_name                  go to state 270
    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 164
    expression                 go to state 199


State 197

  151 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 151 (unary_expression)


State 198

  160 cast_expression: LPAREN type_name • RPAREN cast_expression

    RPAREN  shift, and go to state 271


State 199

  136 primary_expression: LPAREN expression • RPAREN
  205 expression: expression • COMMA assignment_expression

    RPAREN  shift, and go to state 272
    COMMA   shift, and go to state 251


State 200

  128 conditional_statement: IF LPAREN • expression RPAREN statement
  129                      | IF LPAREN • expression RPAREN statement ELSE statement

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 164
    expression                 go to state 273


State 201

  126 iteration_statement: WHILE LPAREN • expression RPAREN statement

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 164
    expression                 go to state 274


State 202

  123 statement: BREAK SEMICOLON •

    $default  reduce using rule 123 (statement)


State 203

  124 statement: CONTINUE SEMICOLON •

    $default  reduce using rule 124 (statement)


State 204

  127 iteration_statement: FOR LPAREN • expression_statement expression_statement expression_statement RPAREN statement

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    SEMICOLON       shift, and go to state 124
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    expression_statement       go to state 275
    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 164
    expression                 go to state 165


State 205

  125 iteration_statement: DO statement • WHILE LPAREN expression RPAREN SEMICOLON

    WHILE  shift, and go to state 276


State 206

  136 primary_expression: LPAREN • expression RPAREN

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 164
    expression                 go to state 199


State 207

  148 unary_expression: INCREMENT unary_expression •

    $default  reduce using rule 148 (unary_expression)


State 208

  149 unary_expression: DECREMENT unary_expression •

    $default  reduce using rule 149 (unary_expression)


State 209

  119 statement: RETURN expression • SEMICOLON
  205 expression: expression • COMMA assignment_expression

    SEMICOLON  shift, and go to state 277
    COMMA      shift, and go to state 251


State 210

   13 compound_statement: LBRACE non_empty_block_item_list RBRACE •

    $default  reduce using rule 13 (compound_statement)


State 211

   15 non_empty_block_item_list: non_empty_block_item_list block_item •

    $default  reduce using rule 15 (non_empty_block_item_list)


State 212

  139 postfix_expression: postfix_expression LPAREN • RPAREN
  140                   | postfix_expression LPAREN • argument_expression_list RPAREN

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    RPAREN          shift, and go to state 278
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    argument_expression_list   go to state 279
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 177


State 213

  138 postfix_expression: postfix_expression LSQBRACKET • expression RSQBRACKET

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 164
    expression                 go to state 280


State 214

  141 postfix_expression: postfix_expression DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 281


State 215

  142 postfix_expression: postfix_expression ARROW • IDENTIFIER

    IDENTIFIER  shift, and go to state 282


State 216

  143 postfix_expression: postfix_expression INCREMENT •

    $default  reduce using rule 143 (postfix_expression)


State 217

  144 postfix_expression: postfix_expression DECREMENT •

    $default  reduce using rule 144 (postfix_expression)


State 218

  193 assignment_operator: ASSIGN •

    $default  reduce using rule 193 (assignment_operator)


State 219

  194 assignment_operator: PLUS_ASSIGN •

    $default  reduce using rule 194 (assignment_operator)


State 220

  195 assignment_operator: MINUS_ASSIGN •

    $default  reduce using rule 195 (assignment_operator)


State 221

  196 assignment_operator: MUL_ASSIGN •

    $default  reduce using rule 196 (assignment_operator)


State 222

  197 assignment_operator: DIV_ASSIGN •

    $default  reduce using rule 197 (assignment_operator)


State 223

  198 assignment_operator: MOD_ASSIGN •

    $default  reduce using rule 198 (assignment_operator)


State 224

  199 assignment_operator: SHIFT_LEFT_ASSIGN •

    $default  reduce using rule 199 (assignment_operator)


State 225

  200 assignment_operator: SHIFT_RIGHT_ASSIGN •

    $default  reduce using rule 200 (assignment_operator)


State 226

  201 assignment_operator: BIT_AND_ASSIGN •

    $default  reduce using rule 201 (assignment_operator)


State 227

  202 assignment_operator: BIT_XOR_ASSIGN •

    $default  reduce using rule 202 (assignment_operator)


State 228

  203 assignment_operator: BIT_OR_ASSIGN •

    $default  reduce using rule 203 (assignment_operator)


State 229

  192 assignment_expression: unary_expression assignment_operator • assignment_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 283


State 230

  150 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 150 (unary_expression)


State 231

  162 multiplicative_expression: multiplicative_expression MULTIPLY • cast_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression  go to state 148
    postfix_expression  go to state 149
    unary_expression    go to state 180
    unary_operator      go to state 151
    cast_expression     go to state 284


State 232

  163 multiplicative_expression: multiplicative_expression DIVIDE • cast_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression  go to state 148
    postfix_expression  go to state 149
    unary_expression    go to state 180
    unary_operator      go to state 151
    cast_expression     go to state 285


State 233

  164 multiplicative_expression: multiplicative_expression MODULO • cast_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression  go to state 148
    postfix_expression  go to state 149
    unary_expression    go to state 180
    unary_operator      go to state 151
    cast_expression     go to state 286


State 234

  166 additive_expression: additive_expression PLUS • multiplicative_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 180
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 287


State 235

  167 additive_expression: additive_expression MINUS • multiplicative_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 180
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 288


State 236

  169 shift_expression: shift_expression SHIFT_LEFT • additive_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 180
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 289


State 237

  170 shift_expression: shift_expression SHIFT_RIGHT • additive_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 180
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 290


State 238

  172 relational_expression: relational_expression LESS • shift_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 180
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 291


State 239

  173 relational_expression: relational_expression GREATER • shift_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 180
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 292


State 240

  174 relational_expression: relational_expression LESS_EQUAL • shift_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 180
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 293


State 241

  175 relational_expression: relational_expression GREATER_EQUAL • shift_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 180
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 294


State 242

  177 equality_expression: equality_expression EQUAL • relational_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 180
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 295


State 243

  178 equality_expression: equality_expression NOT_EQUAL • relational_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 180
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 296


State 244

  180 and_expression: and_expression BIT_AND • equality_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 180
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 297


State 245

  182 exclusive_or_expression: exclusive_or_expression BIT_XOR • and_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 180
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 298


State 246

  184 inclusive_or_expression: inclusive_or_expression BIT_OR • exclusive_or_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 180
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 299


State 247

  186 logical_and_expression: logical_and_expression AND • inclusive_or_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 180
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 300


State 248

  190 conditional_expression: logical_or_expression QUESTION • expression COLON conditional_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 164
    expression                 go to state 301


State 249

  188 logical_or_expression: logical_or_expression OR • logical_and_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 180
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 302


State 250

  131 expression_statement: expression SEMICOLON •

    $default  reduce using rule 131 (expression_statement)


State 251

  205 expression: expression COMMA • assignment_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 303


State 252

  116 initializer_list: initializer •

    $default  reduce using rule 116 (initializer_list)


State 253

  114 initializer: LBRACE initializer_list • RBRACE
  115            | LBRACE initializer_list • COMMA RBRACE
  117 initializer_list: initializer_list • COMMA initializer

    RBRACE  shift, and go to state 304
    COMMA   shift, and go to state 305


State 254

   65 direct_declarator: LPAREN • declarator RPAREN
  100 direct_abstract_declarator: LPAREN • abstract_declarator RPAREN
  104                           | LPAREN • parameter_type_list RPAREN

    IDENTIFIER    shift, and go to state 48
    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    LPAREN        shift, and go to state 254
    LSQBRACKET    shift, and go to state 107
    MULTIPLY      shift, and go to state 51

    declaration_specifiers      go to state 172
    storage_class_specifier     go to state 32
    type_specifier              go to state 33
    type_qualifier              go to state 34
    function_specifier          go to state 35
    alignment_specifier         go to state 36
    declarator                  go to state 76
    pointer                     go to state 256
    direct_declarator           go to state 56
    struct_or_union_specifier   go to state 37
    enum_specifier              go to state 38
    abstract_declarator         go to state 189
    direct_abstract_declarator  go to state 110
    parameter_type_list         go to state 190
    parameter_list              go to state 174
    parameter_declaration       go to state 175


State 255

  110 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 110 (parameter_declaration)


State 256

   58 declarator: pointer • direct_declarator
   97 abstract_declarator: pointer •
   98                    | pointer • direct_abstract_declarator

    IDENTIFIER  shift, and go to state 48
    LPAREN      shift, and go to state 254
    LSQBRACKET  shift, and go to state 107

    $default  reduce using rule 97 (abstract_declarator)

    direct_declarator           go to state 88
    direct_abstract_declarator  go to state 193


State 257

  111 parameter_declaration: declaration_specifiers abstract_declarator •

    $default  reduce using rule 111 (parameter_declaration)


State 258

   69 direct_declarator: direct_declarator LPAREN parameter_type_list RPAREN •

    $default  reduce using rule 69 (direct_declarator)


State 259

  107 parameter_type_list: parameter_list COMMA • ELLIPSIS
  109 parameter_list: parameter_list COMMA • parameter_declaration

    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    ELLIPSIS      shift, and go to state 306

    declaration_specifiers     go to state 172
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38
    parameter_declaration      go to state 307


State 260

   68 direct_declarator: direct_declarator LPAREN argument_expression_list RPAREN •

    $default  reduce using rule 68 (direct_declarator)


State 261

  146 argument_expression_list: argument_expression_list COMMA • assignment_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 308


State 262

   66 direct_declarator: direct_declarator LSQBRACKET assignment_expression RSQBRACKET •

    $default  reduce using rule 66 (direct_declarator)


State 263

   87 struct_declarator: declarator COLON constant_expression •

    $default  reduce using rule 87 (struct_declarator)


State 264

   85 struct_declarator_list: struct_declarator_list COMMA struct_declarator •

    $default  reduce using rule 85 (struct_declarator_list)


State 265

  100 direct_abstract_declarator: LPAREN abstract_declarator RPAREN •

    $default  reduce using rule 100 (direct_abstract_declarator)


State 266

  104 direct_abstract_declarator: LPAREN parameter_type_list RPAREN •

    $default  reduce using rule 104 (direct_abstract_declarator)


State 267

  102 direct_abstract_declarator: LSQBRACKET type_qualifier_list assignment_expression • RSQBRACKET

    RSQBRACKET  shift, and go to state 309


State 268

  105 direct_abstract_declarator: direct_abstract_declarator LPAREN parameter_type_list • RPAREN

    RPAREN  shift, and go to state 310


State 269

  103 direct_abstract_declarator: direct_abstract_declarator LSQBRACKET assignment_expression • RSQBRACKET

    RSQBRACKET  shift, and go to state 311


State 270

  152 unary_expression: SIZEOF LPAREN type_name • RPAREN

    RPAREN  shift, and go to state 312


State 271

  160 cast_expression: LPAREN type_name RPAREN • cast_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression  go to state 148
    postfix_expression  go to state 149
    unary_expression    go to state 180
    unary_operator      go to state 151
    cast_expression     go to state 313


State 272

  136 primary_expression: LPAREN expression RPAREN •

    $default  reduce using rule 136 (primary_expression)


State 273

  128 conditional_statement: IF LPAREN expression • RPAREN statement
  129                      | IF LPAREN expression • RPAREN statement ELSE statement
  205 expression: expression • COMMA assignment_expression

    RPAREN  shift, and go to state 314
    COMMA   shift, and go to state 251


State 274

  126 iteration_statement: WHILE LPAREN expression • RPAREN statement
  205 expression: expression • COMMA assignment_expression

    RPAREN  shift, and go to state 315
    COMMA   shift, and go to state 251


State 275

  127 iteration_statement: FOR LPAREN expression_statement • expression_statement expression_statement RPAREN statement

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    SEMICOLON       shift, and go to state 124
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    expression_statement       go to state 316
    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 164
    expression                 go to state 165


State 276

  125 iteration_statement: DO statement WHILE • LPAREN expression RPAREN SEMICOLON

    LPAREN  shift, and go to state 317


State 277

  119 statement: RETURN expression SEMICOLON •

    $default  reduce using rule 119 (statement)


State 278

  139 postfix_expression: postfix_expression LPAREN RPAREN •

    $default  reduce using rule 139 (postfix_expression)


State 279

  140 postfix_expression: postfix_expression LPAREN argument_expression_list • RPAREN
  146 argument_expression_list: argument_expression_list • COMMA assignment_expression

    RPAREN  shift, and go to state 318
    COMMA   shift, and go to state 261


State 280

  138 postfix_expression: postfix_expression LSQBRACKET expression • RSQBRACKET
  205 expression: expression • COMMA assignment_expression

    RSQBRACKET  shift, and go to state 319
    COMMA       shift, and go to state 251


State 281

  141 postfix_expression: postfix_expression DOT IDENTIFIER •

    $default  reduce using rule 141 (postfix_expression)


State 282

  142 postfix_expression: postfix_expression ARROW IDENTIFIER •

    $default  reduce using rule 142 (postfix_expression)


State 283

  192 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 192 (assignment_expression)


State 284

  162 multiplicative_expression: multiplicative_expression MULTIPLY cast_expression •

    $default  reduce using rule 162 (multiplicative_expression)


State 285

  163 multiplicative_expression: multiplicative_expression DIVIDE cast_expression •

    $default  reduce using rule 163 (multiplicative_expression)


State 286

  164 multiplicative_expression: multiplicative_expression MODULO cast_expression •

    $default  reduce using rule 164 (multiplicative_expression)


State 287

  162 multiplicative_expression: multiplicative_expression • MULTIPLY cast_expression
  163                          | multiplicative_expression • DIVIDE cast_expression
  164                          | multiplicative_expression • MODULO cast_expression
  166 additive_expression: additive_expression PLUS multiplicative_expression •

    MULTIPLY  shift, and go to state 231
    DIVIDE    shift, and go to state 232
    MODULO    shift, and go to state 233

    $default  reduce using rule 166 (additive_expression)


State 288

  162 multiplicative_expression: multiplicative_expression • MULTIPLY cast_expression
  163                          | multiplicative_expression • DIVIDE cast_expression
  164                          | multiplicative_expression • MODULO cast_expression
  167 additive_expression: additive_expression MINUS multiplicative_expression •

    MULTIPLY  shift, and go to state 231
    DIVIDE    shift, and go to state 232
    MODULO    shift, and go to state 233

    $default  reduce using rule 167 (additive_expression)


State 289

  166 additive_expression: additive_expression • PLUS multiplicative_expression
  167                    | additive_expression • MINUS multiplicative_expression
  169 shift_expression: shift_expression SHIFT_LEFT additive_expression •

    PLUS   shift, and go to state 234
    MINUS  shift, and go to state 235

    $default  reduce using rule 169 (shift_expression)


State 290

  166 additive_expression: additive_expression • PLUS multiplicative_expression
  167                    | additive_expression • MINUS multiplicative_expression
  170 shift_expression: shift_expression SHIFT_RIGHT additive_expression •

    PLUS   shift, and go to state 234
    MINUS  shift, and go to state 235

    $default  reduce using rule 170 (shift_expression)


State 291

  169 shift_expression: shift_expression • SHIFT_LEFT additive_expression
  170                 | shift_expression • SHIFT_RIGHT additive_expression
  172 relational_expression: relational_expression LESS shift_expression •

    SHIFT_LEFT   shift, and go to state 236
    SHIFT_RIGHT  shift, and go to state 237

    $default  reduce using rule 172 (relational_expression)


State 292

  169 shift_expression: shift_expression • SHIFT_LEFT additive_expression
  170                 | shift_expression • SHIFT_RIGHT additive_expression
  173 relational_expression: relational_expression GREATER shift_expression •

    SHIFT_LEFT   shift, and go to state 236
    SHIFT_RIGHT  shift, and go to state 237

    $default  reduce using rule 173 (relational_expression)


State 293

  169 shift_expression: shift_expression • SHIFT_LEFT additive_expression
  170                 | shift_expression • SHIFT_RIGHT additive_expression
  174 relational_expression: relational_expression LESS_EQUAL shift_expression •

    SHIFT_LEFT   shift, and go to state 236
    SHIFT_RIGHT  shift, and go to state 237

    $default  reduce using rule 174 (relational_expression)


State 294

  169 shift_expression: shift_expression • SHIFT_LEFT additive_expression
  170                 | shift_expression • SHIFT_RIGHT additive_expression
  175 relational_expression: relational_expression GREATER_EQUAL shift_expression •

    SHIFT_LEFT   shift, and go to state 236
    SHIFT_RIGHT  shift, and go to state 237

    $default  reduce using rule 175 (relational_expression)


State 295

  172 relational_expression: relational_expression • LESS shift_expression
  173                      | relational_expression • GREATER shift_expression
  174                      | relational_expression • LESS_EQUAL shift_expression
  175                      | relational_expression • GREATER_EQUAL shift_expression
  177 equality_expression: equality_expression EQUAL relational_expression •

    LESS           shift, and go to state 238
    GREATER        shift, and go to state 239
    LESS_EQUAL     shift, and go to state 240
    GREATER_EQUAL  shift, and go to state 241

    $default  reduce using rule 177 (equality_expression)


State 296

  172 relational_expression: relational_expression • LESS shift_expression
  173                      | relational_expression • GREATER shift_expression
  174                      | relational_expression • LESS_EQUAL shift_expression
  175                      | relational_expression • GREATER_EQUAL shift_expression
  178 equality_expression: equality_expression NOT_EQUAL relational_expression •

    LESS           shift, and go to state 238
    GREATER        shift, and go to state 239
    LESS_EQUAL     shift, and go to state 240
    GREATER_EQUAL  shift, and go to state 241

    $default  reduce using rule 178 (equality_expression)


State 297

  177 equality_expression: equality_expression • EQUAL relational_expression
  178                    | equality_expression • NOT_EQUAL relational_expression
  180 and_expression: and_expression BIT_AND equality_expression •

    EQUAL      shift, and go to state 242
    NOT_EQUAL  shift, and go to state 243

    $default  reduce using rule 180 (and_expression)


State 298

  180 and_expression: and_expression • BIT_AND equality_expression
  182 exclusive_or_expression: exclusive_or_expression BIT_XOR and_expression •

    BIT_AND  shift, and go to state 244

    $default  reduce using rule 182 (exclusive_or_expression)


State 299

  182 exclusive_or_expression: exclusive_or_expression • BIT_XOR and_expression
  184 inclusive_or_expression: inclusive_or_expression BIT_OR exclusive_or_expression •

    BIT_XOR  shift, and go to state 245

    $default  reduce using rule 184 (inclusive_or_expression)


State 300

  184 inclusive_or_expression: inclusive_or_expression • BIT_OR exclusive_or_expression
  186 logical_and_expression: logical_and_expression AND inclusive_or_expression •

    BIT_OR  shift, and go to state 246

    $default  reduce using rule 186 (logical_and_expression)


State 301

  190 conditional_expression: logical_or_expression QUESTION expression • COLON conditional_expression
  205 expression: expression • COMMA assignment_expression

    COMMA  shift, and go to state 251
    COLON  shift, and go to state 320


State 302

  186 logical_and_expression: logical_and_expression • AND inclusive_or_expression
  188 logical_or_expression: logical_or_expression OR logical_and_expression •

    AND  shift, and go to state 247

    $default  reduce using rule 188 (logical_or_expression)


State 303

  205 expression: expression COMMA assignment_expression •

    $default  reduce using rule 205 (expression)


State 304

  114 initializer: LBRACE initializer_list RBRACE •

    $default  reduce using rule 114 (initializer)


State 305

  115 initializer: LBRACE initializer_list COMMA • RBRACE
  117 initializer_list: initializer_list COMMA • initializer

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    LBRACE          shift, and go to state 166
    RBRACE          shift, and go to state 321
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    initializer                go to state 322
    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 168


State 306

  107 parameter_type_list: parameter_list COMMA ELLIPSIS •

    $default  reduce using rule 107 (parameter_type_list)


State 307

  109 parameter_list: parameter_list COMMA parameter_declaration •

    $default  reduce using rule 109 (parameter_list)


State 308

  146 argument_expression_list: argument_expression_list COMMA assignment_expression •

    $default  reduce using rule 146 (argument_expression_list)


State 309

  102 direct_abstract_declarator: LSQBRACKET type_qualifier_list assignment_expression RSQBRACKET •

    $default  reduce using rule 102 (direct_abstract_declarator)


State 310

  105 direct_abstract_declarator: direct_abstract_declarator LPAREN parameter_type_list RPAREN •

    $default  reduce using rule 105 (direct_abstract_declarator)


State 311

  103 direct_abstract_declarator: direct_abstract_declarator LSQBRACKET assignment_expression RSQBRACKET •

    $default  reduce using rule 103 (direct_abstract_declarator)


State 312

  152 unary_expression: SIZEOF LPAREN type_name RPAREN •

    $default  reduce using rule 152 (unary_expression)


State 313

  160 cast_expression: LPAREN type_name RPAREN cast_expression •

    $default  reduce using rule 160 (cast_expression)


State 314

  128 conditional_statement: IF LPAREN expression RPAREN • statement
  129                      | IF LPAREN expression RPAREN • statement ELSE statement

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    LBRACE          shift, and go to state 82
    SEMICOLON       shift, and go to state 124
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    IF              shift, and go to state 131
    WHILE           shift, and go to state 132
    BREAK           shift, and go to state 133
    CONTINUE        shift, and go to state 134
    FOR             shift, and go to state 135
    DO              shift, and go to state 136
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138
    RETURN          shift, and go to state 139

    compound_statement         go to state 141
    statement                  go to state 323
    iteration_statement        go to state 145
    conditional_statement      go to state 146
    expression_statement       go to state 147
    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 164
    expression                 go to state 165


State 315

  126 iteration_statement: WHILE LPAREN expression RPAREN • statement

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    LBRACE          shift, and go to state 82
    SEMICOLON       shift, and go to state 124
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    IF              shift, and go to state 131
    WHILE           shift, and go to state 132
    BREAK           shift, and go to state 133
    CONTINUE        shift, and go to state 134
    FOR             shift, and go to state 135
    DO              shift, and go to state 136
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138
    RETURN          shift, and go to state 139

    compound_statement         go to state 141
    statement                  go to state 324
    iteration_statement        go to state 145
    conditional_statement      go to state 146
    expression_statement       go to state 147
    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 164
    expression                 go to state 165


State 316

  127 iteration_statement: FOR LPAREN expression_statement expression_statement • expression_statement RPAREN statement

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    SEMICOLON       shift, and go to state 124
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    expression_statement       go to state 325
    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 164
    expression                 go to state 165


State 317

  125 iteration_statement: DO statement WHILE LPAREN • expression RPAREN SEMICOLON

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 164
    expression                 go to state 326


State 318

  140 postfix_expression: postfix_expression LPAREN argument_expression_list RPAREN •

    $default  reduce using rule 140 (postfix_expression)


State 319

  138 postfix_expression: postfix_expression LSQBRACKET expression RSQBRACKET •

    $default  reduce using rule 138 (postfix_expression)


State 320

  190 conditional_expression: logical_or_expression QUESTION expression COLON • conditional_expression

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138

    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 180
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 327


State 321

  115 initializer: LBRACE initializer_list COMMA RBRACE •

    $default  reduce using rule 115 (initializer)


State 322

  117 initializer_list: initializer_list COMMA initializer •

    $default  reduce using rule 117 (initializer_list)


State 323

  128 conditional_statement: IF LPAREN expression RPAREN statement •
  129                      | IF LPAREN expression RPAREN statement • ELSE statement

    ELSE  shift, and go to state 328

    $default  reduce using rule 128 (conditional_statement)


State 324

  126 iteration_statement: WHILE LPAREN expression RPAREN statement •

    $default  reduce using rule 126 (iteration_statement)


State 325

  127 iteration_statement: FOR LPAREN expression_statement expression_statement expression_statement • RPAREN statement

    RPAREN  shift, and go to state 329


State 326

  125 iteration_statement: DO statement WHILE LPAREN expression • RPAREN SEMICOLON
  205 expression: expression • COMMA assignment_expression

    RPAREN  shift, and go to state 330
    COMMA   shift, and go to state 251


State 327

  190 conditional_expression: logical_or_expression QUESTION expression COLON conditional_expression •

    $default  reduce using rule 190 (conditional_expression)


State 328

  129 conditional_statement: IF LPAREN expression RPAREN statement ELSE • statement

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    LBRACE          shift, and go to state 82
    SEMICOLON       shift, and go to state 124
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    IF              shift, and go to state 131
    WHILE           shift, and go to state 132
    BREAK           shift, and go to state 133
    CONTINUE        shift, and go to state 134
    FOR             shift, and go to state 135
    DO              shift, and go to state 136
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138
    RETURN          shift, and go to state 139

    compound_statement         go to state 141
    statement                  go to state 331
    iteration_statement        go to state 145
    conditional_statement      go to state 146
    expression_statement       go to state 147
    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 164
    expression                 go to state 165


State 329

  127 iteration_statement: FOR LPAREN expression_statement expression_statement expression_statement RPAREN • statement

    IDENTIFIER      shift, and go to state 117
    NUMBER          shift, and go to state 118
    CHAR_LITERAL    shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    SIZEOF          shift, and go to state 121
    LPAREN          shift, and go to state 122
    LBRACE          shift, and go to state 82
    SEMICOLON       shift, and go to state 124
    BIT_AND         shift, and go to state 125
    NOT             shift, and go to state 126
    BIT_NOT         shift, and go to state 127
    PLUS            shift, and go to state 128
    MINUS           shift, and go to state 129
    MULTIPLY        shift, and go to state 130
    IF              shift, and go to state 131
    WHILE           shift, and go to state 132
    BREAK           shift, and go to state 133
    CONTINUE        shift, and go to state 134
    FOR             shift, and go to state 135
    DO              shift, and go to state 136
    INCREMENT       shift, and go to state 137
    DECREMENT       shift, and go to state 138
    RETURN          shift, and go to state 139

    compound_statement         go to state 141
    statement                  go to state 332
    iteration_statement        go to state 145
    conditional_statement      go to state 146
    expression_statement       go to state 147
    primary_expression         go to state 148
    postfix_expression         go to state 149
    unary_expression           go to state 150
    unary_operator             go to state 151
    cast_expression            go to state 152
    multiplicative_expression  go to state 153
    additive_expression        go to state 154
    shift_expression           go to state 155
    relational_expression      go to state 156
    equality_expression        go to state 157
    and_expression             go to state 158
    exclusive_or_expression    go to state 159
    inclusive_or_expression    go to state 160
    logical_and_expression     go to state 161
    logical_or_expression      go to state 162
    conditional_expression     go to state 163
    assignment_expression      go to state 164
    expression                 go to state 165


State 330

  125 iteration_statement: DO statement WHILE LPAREN expression RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 333


State 331

  129 conditional_statement: IF LPAREN expression RPAREN statement ELSE statement •

    $default  reduce using rule 129 (conditional_statement)


State 332

  127 iteration_statement: FOR LPAREN expression_statement expression_statement expression_statement RPAREN statement •

    $default  reduce using rule 127 (iteration_statement)


State 333

  125 iteration_statement: DO statement WHILE LPAREN expression RPAREN SEMICOLON •

    $default  reduce using rule 125 (iteration_statement)
